#!/bin/bash
if [ -z "$CURRENT_VND" ]; then
  export CURRENT_VND=markjl_vnd
fi

if [ -z "$CURRENT_VND_IP" ]; then
  export CURRENT_VND_IP="192.168.42.100/24"
fi

alias list_vnds='ip tuntap list'

start_packet_forwarding() {
  sudo sysctl net.ipv4.ip_forward=1  
}

stop_packet_forwarding() {
  sudo sysctl net.ipv4.ip_forward=0
}

alias vnd_open='start_packet_forwarding'
alias vnd_close='stop_packet_forwarding'

make_vnd() {
  # create a vnd
  sudo ip tuntap add mode tap name $1 user $USER
  # enable and activate vnd
  sudo ip link set $CURRENT_VND
  # Assign IP addr to vnd
  sudo ip addr add $CURRENT_VND_IP dev $CURRENT_VND
  # Allow TCP packets to reach vnd IP (POSTROUTING) and maps IP to device (MASQUERADE)
  sudo iptables -t nat -A POSTROUTING -s $CURRENT_VND_IP -j MASQUERADE
  start_packet_forwarding
  # list vnds on machine
  ip tuntap list
}

create_vnd() {
  echo "Create vnd $CURRENT_VND with IP $CURRENT_VND_IP?"

  case "$response" in 
    [Yy]* ) make_vnd;;
    [Nn]* ) echo "Use `set_vnd_name NAME` and `set_vnd_ip IP`";;
  esac
}

remove_vnd() {
  read -p "Remove vnd $CURRENT_VND (y/n)?" response
  case "$response" in 
    [Yy]* ) sudo ip tuntap del mode tap name $CURRENT_VND;;
    [Nn]* ) echo "Use `set_vnd_name` to set correct vnd name";;
  esac
  list_vnds
}

set_vnd_name() {
  export CURRENT_VND="$1"
  echo "CURRENT_VND set to $1"
}

set_vnd_ip() {
  export CURRENT_VND_IP="$1/24"
  echo "CURRENT_VND_IP set to $1"
}


